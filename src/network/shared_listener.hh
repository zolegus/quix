//
///////////////////////////////////////////////////////////////////////////////////////////////////
//
#ifndef GUARD__NETWORK__SHARED_LISTENER__HH
#define GUARD__NETWORK__SHARED_LISTENER__HH
//
///////////////////////////////////////////////////////////////////////////////////////////////////
//
#include <network/shared_listener.h>
//
///////////////////////////////////////////////////////////////////////////////////////////////////
//
class network::shared_listener
{
  struct impl;
  impl *pimpl;

public:

  shared_listener( const std::string&, const std::string&, const std::string& );
  shared_listener( const shared_listener& ) = delete;
  shared_listener( shared_listener&& ) = delete;
  shared_listener& operator=( shared_listener ) = delete;
  shared_listener& operator=( shared_listener&& ) = delete;
  ~shared_listener();

  void operator()();
};
//
///////////////////////////////////////////////////////////////////////////////////////////////////
//
#endif // GUARD__NETWORK__SHARED_LISTENER__HH
//
///////////////////////////////////////////////////////////////////////////////////////////////////
//
