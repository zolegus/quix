//
///////////////////////////////////////////////////////////////////////////////////////////////////
//
#ifndef GUARD__NETWORK__SOCKET_LISTENING_HH
#define GUARD__NETWORK__SOCKET_LISTENING_HH
//
///////////////////////////////////////////////////////////////////////////////////////////////////
//
#include <network/socket_listening.h>
//
///////////////////////////////////////////////////////////////////////////////////////////////////
//
template< typename A > 
class network::socket_listening
{
  struct impl;
  impl *pimpl;

public:

  socket_listening( const std::string& );
  socket_listening( const socket_listening& ) = delete;
  socket_listening( socket_listening&& ) = delete;
  socket_listening& operator=( socket_listening ) = delete;
  socket_listening& operator=( socket_listening&& ) = delete;
  ~socket_listening();

  int accept();
};
//
///////////////////////////////////////////////////////////////////////////////////////////////////
//
#endif // GUARD__NETWORK__SOCKET_LISTENING_HH
//
///////////////////////////////////////////////////////////////////////////////////////////////////
//
