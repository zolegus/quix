//
///////////////////////////////////////////////////////////////////////////////////////////////////
//
#ifndef GUARD__MEMORY__MAPPED__HH
#define GUARD__MEMORY__MAPPED__HH
//
///////////////////////////////////////////////////////////////////////////////////////////////////
//
#include <memory/mapped.h>
#include <cstddef>
//
///////////////////////////////////////////////////////////////////////////////////////////////////
//
class memory::mapped
{
  struct impl;
  impl *pimpl;

public:

  mapped( const std::string&, const std::size_t, const std::size_t );
  mapped( const mapped& ) = delete;
  mapped( mapped&& ) = delete;
  mapped& operator=( mapped ) = delete;
  mapped& operator=( mapped&& ) = delete;
  ~mapped();

  void *data( const std::size_t = 0 );
	std::size_t size( const std::size_t = 0 );
};
//
///////////////////////////////////////////////////////////////////////////////////////////////////
//
#endif // GUARD__MEMORY__MAPPED__HH
//
///////////////////////////////////////////////////////////////////////////////////////////////////
//
