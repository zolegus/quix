//
///////////////////////////////////////////////////////////////////////////////////////////////////
//
#ifndef GUARD__BEHAVIOUR__TCP_RECV__HH
#define GUARD__BEHAVIOUR__TCP_RECV__HH
//
///////////////////////////////////////////////////////////////////////////////////////////////////
//
#include <behaviour/tcp_recv.h>
#include <string>
//
///////////////////////////////////////////////////////////////////////////////////////////////////
//
template< typename E > 
class behaviour::tcp_recv
{
  struct impl;
  impl *pimpl;

public:

  using event_type = E;

  tcp_recv( void*, const std::string&, int );
  tcp_recv( const tcp_recv& ) = delete;
  tcp_recv( tcp_recv&& ) = delete;
  tcp_recv& operator=( tcp_recv ) = delete;
  tcp_recv& operator=( tcp_recv&& ) = delete;
  ~tcp_recv();

  void operator()( event_type& );
  bool post();
};
//
///////////////////////////////////////////////////////////////////////////////////////////////////
//
#endif // GUARD__BEHAVIOUR__TCP_RECV__HH
//
///////////////////////////////////////////////////////////////////////////////////////////////////
//
