//
///////////////////////////////////////////////////////////////////////////////////////////////////
//
#ifndef GUARD__BEHAVIOUR__EVENT_REPUBLISH__HH
#define GUARD__BEHAVIOUR__EVENT_REPUBLISH__HH
//
///////////////////////////////////////////////////////////////////////////////////////////////////
//
#include <behaviour/event_republish.h>
//
///////////////////////////////////////////////////////////////////////////////////////////////////
//
template< typename E > 
class behaviour::event_republish
{
  struct impl;
  impl *pimpl;

public:

  using event_type = E;

  event_republish( void*, const unsigned int );
  event_republish( const event_republish& ) = delete;
  event_republish( event_republish&& ) = delete;
  event_republish& operator=( event_republish ) = delete;
  event_republish& operator=( event_republish&& ) = delete;
  ~event_republish();

  void  operator()( event_type& );
  bool post();
};
//
///////////////////////////////////////////////////////////////////////////////////////////////////
//
#endif // GUARD__BEHAVIOUR__EVENT_REPUBLISH__HH
//
///////////////////////////////////////////////////////////////////////////////////////////////////
//
