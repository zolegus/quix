//
///////////////////////////////////////////////////////////////////////////////////////////////////
//
#ifndef GUARD__TYPES__BUFFER__H
#define GUARD__TYPES__BUFFER__H
//
///////////////////////////////////////////////////////////////////////////////////////////////////
//
#include <string>
//
///////////////////////////////////////////////////////////////////////////////////////////////////
//
namespace types
{
  template< typename T, std::size_t R > struct alignas( 64 ) buffer;
}
//
///////////////////////////////////////////////////////////////////////////////////////////////////
//
template< typename T, std::size_t R > std::string toString( const types::buffer< T, R >& );
//
///////////////////////////////////////////////////////////////////////////////////////////////////
//
#endif // GUARD__TYPES__BUFFER__H
//
///////////////////////////////////////////////////////////////////////////////////////////////////
//
