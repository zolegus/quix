//
///////////////////////////////////////////////////////////////////////////////////////////////////
//
#ifndef GUARD__TRANSPORT__SLOT__H
#define GUARD__TRANSPORT__SLOT__H
//
///////////////////////////////////////////////////////////////////////////////////////////////////
//
#include <string>
//
///////////////////////////////////////////////////////////////////////////////////////////////////
//
namespace transport
{
  template< typename T, bool C > class slot;
  template< typename T > auto make_aquire_commit_slot( T& transport_arg );
  template< typename T > auto make_reaquire_commit_slot( T& transport_arg );
  template< typename T > auto make_reaquire_release_slot( T& transport_arg );
}
//
///////////////////////////////////////////////////////////////////////////////////////////////////
//
template< typename T, bool C  > std::string toString( const transport::slot< T, C >& );
//
///////////////////////////////////////////////////////////////////////////////////////////////////
//
#endif // GUARD__TRANSPORT__SLOT__H
//
///////////////////////////////////////////////////////////////////////////////////////////////////
//
